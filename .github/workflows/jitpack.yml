name: Ziggeo Test and Publish Release
on:
  push:
    branches: [ 'feature_cicd' ]

jobs:
  #  run_tests:
  #    runs-on: macos-latest
  #    defaults:
  #      run:
  #        working-directory: ./example
  #    strategy:
  #      matrix:
  #        api-level: [ 23 ]
  #        target: [ default ]
  #    steps:
  #      - uses: actions/checkout@v2
  #      - uses: subosito/flutter-action@v1
  #        with:
  #          flutter-version: '3.0.0'
  #          channel: 'stable'
  #      - name: Create google services file
  #        run: cat /Users/runner/work/Flutter-SDK/Flutter-SDK/example/android/app/google-services.json | base64
  #      - name: Putting google services data
  #        env:
  #          DATA: ${{ secrets.PLAY_CONFIG_JSON }}
  #        run: echo $DATA > /Users/runner/work/Flutter-SDK/Flutter-SDK/example/android/app/google-services.json
  #      - name: "Run Flutter Driver tests"
  #        uses: reactivecircus/android-emulator-runner@v2
  #        with:
  #          api-level: ${{ matrix.api-level }}
  #          target: ${{ matrix.target }}
  #          working-directory: ./example
  #          profile: Nexus 4
  #          script: "flutter drive --driver=test_driver/mapping_for_tests.dart --target=integration_test/mapping_tests.dart"

  #  publishing_sdk:
  #    runs-on: ubuntu-latest
  #    needs: run_tests
  #    steps:
  #      - name: 'Checkout'
  #        uses: actions/checkout@v2
  #
  #      - name: '>> Dart package <<'
  #        uses: k-paxian/dart-package-publisher@master
  #        with:
  #          accessToken: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
  #          refreshToken: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}

  publishing_demo:
    runs-on: macos-latest
    #    needs: publishing_sdk
    defaults:
      run:
        working-directory: ./example
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.11.0-0.1.pre'
          channel: beta
      - name: Create google services file
        run: cat /Users/runner/work/Flutter-SDK/Flutter-SDK/example/android/app/google-services.json | base64
      - name: Putting google services data
        env:
          DATA: ${{ secrets.PLAY_CONFIG_JSON }}
        run: echo $DATA > /Users/runner/work/Flutter-SDK/Flutter-SDK/example/android/app/google-services.json

      - name: Create the Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          # import keystore from secrets
          echo $KEYSTORE_BASE64 | base64 -d > $RUNNER_TEMP/key.properties

      - run: flutter pub get

      #      - uses: subosito/flutter-action@v1.1.1
      #        with:
      #          channel: 'dev'
      #        env:
      #          KEY_JKS: ${{ secrets.KEYSTORE }}
      #          KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      #          ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      #          run: echo $KEY_JKS > key.jks && flutter build apk --release

      - run: flutter build apk --release
      - name: Sign Android Apk
        run: apksigner -keystore $RUNNER_TEMP/key.properties -storepass ${{ secrets.ANDROID_KEYSTORE_PASSWORD }} -keypass ${{ secrets.ANDROID_KEY_PASSWORD }} -sigalg SHA256withRSA -digestalg SHA-256 -signedapk build/app/outputs/apk/release/androidFlutter-v1.0.6-release-signed.apk build/app/outputs/apk/release/*.apk ${{ secrets.ANDROID_KEY_ALIAS }}
      #
      #      - name: Download Android keystore
      #        id: android_keystore
      #        uses: timheuer/base64-to-file@v1.0.3
      #        with:
      #          fileName: key.jks
      #          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      #
      #      - name: Create key.properties
      #        run: |
      #          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
      #          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
      #          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
      #          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      #
      #      - uses: actions/upload-artifact@v1
      #        with:
      #            name: androidFlutter-v1.0.6-release-signed.apk
      #            path: build/app/outputs/apk/release/app-release.apk
      #            token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish APK test
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.ziggeo.flutter.demo
          releaseFiles: build/app/outputs/flutter-apk/app-release-signed.apk
          track: internal
          status: inProgress
          inAppUpdatePriority: 2
          userFraction: 0.33

#      - name: Release to Google Play (internal)
#        env:
#          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
#          SUPPLY_JSON_KEY_DATA: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#        run: |
#          bundle exec fastlane supply \
#          --aab build/app/outputs/bundle/debug/androidFlutter-v1.0.6-debug.apk \
#          --track internal
